{"version":3,"sources":["components/listUsers/listUsers.jsx","index.js"],"names":["ListUsers","showModal","setState","show","hideModal","paymentUser","payment","card_number","document","getElementById","value","Axios","post","then","response","data","console","log","state","users","cards","cvv","expiry_date","bind","get","this","showHideClassName","className","id","type","placeholder","name","map","card","slice","onClick","user","src","img","alt","username","Component","ReactDOM","render","path","component"],"mappings":"+RAKqBA,E,kDAEjB,aAAe,IAAD,8BACV,gBAwBJC,UAAY,WACR,EAAKC,SAAS,CAAEC,MAAM,KA1BZ,EA6BdC,UAAY,WACR,EAAKF,SAAS,CAAEC,MAAM,KA9BZ,EA4CdE,YAAc,WACV,IAAMC,EAAU,CAAEC,YAAaC,SAASC,eAAe,oBACvDC,MAAQF,SAASC,eAAe,eAChCE,IAAMC,KAAK,+DACXN,GAASO,MAAK,SAAAC,GAA6BA,EAASC,KAC/C,EAAKb,SAAS,CAACI,SAAS,OACxBU,QAAQC,IAAI,EAAKf,SAAS,CAACI,cAhDhC,EAAKY,MAAQ,CACTC,MAAO,GACPhB,MAAM,EACNiB,MAAO,CAEH,CACIb,YAAa,mBACbc,IAAK,IACLC,YAAa,SAGjB,CACIf,YAAa,mBACbc,IAAK,IACLC,YAAa,UAGrBhB,SAAQ,GAEZ,EAAKL,UAAY,EAAKA,UAAUsB,KAAf,gBACjB,EAAKnB,UAAY,EAAKA,UAAUmB,KAAf,gBAtBP,E,qDAkCd,WAAqB,IAAD,OAChBZ,IAAMa,IAAI,oDACLX,MAAK,SAAAC,GACF,IAAMK,EAAQL,EAASC,KACvB,EAAKb,SAAS,CAAEiB,UAChBH,QAAQC,IAAI,EAAKf,SAAS,CAAEiB,gB,oBAgBxC,WAAU,IAAD,OACL,EAAyBM,KAAKP,MAAtBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,MACTM,EAAoBD,KAAKP,MAAMf,KAAO,mBAAqB,mBAOjE,OAAQ,gCAKJ,sBAAKwB,UAAWD,EAAhB,UACI,qBAAKC,UAAU,cAAf,4BAGA,sBAAKA,UAAU,aAAf,UACI,uBAAOA,UAAU,4BAA4BC,GAAG,aAAcC,KAAK,SAASC,YAAY,YACxF,wBAAQC,KAAK,QAAQJ,UAAU,yBAA/B,SACKP,EAAMY,KAAI,SAAAC,GAAI,OACX,yBAAQvB,MAAOuB,EAAK1B,YAAaqB,GAAG,mBAApC,iCAAyEK,EAAK1B,YAAY2B,OAAO,WAGzG,sBAAKP,UAAU,eAAf,UACI,uBAAOA,UAAU,wBAAwBE,KAAK,SAASnB,MAAM,QAAQyB,QAASV,KAAKpB,cACnF,uBAAOsB,UAAU,wBAAwBE,KAAK,SAASnB,MAAM,UAAUyB,QAASV,KAAKrB,qBAMhGe,EAAMa,KAAI,SAAAI,GAAI,OACX,qBAAKT,UAAU,kBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,aAAf,SACI,qBAAKU,IAAKD,EAAKE,IAAKC,IAAKH,EAAKL,SAElC,sBAAKJ,UAAU,YAAf,UACI,gCACI,8CACA,+BAAOS,EAAKL,UAEhB,gCACI,yCACA,+BAAOK,EAAKR,KACZ,uCACA,+CACA,+BAAOQ,EAAKI,oBAIxB,qBAAKb,UAAU,cAAf,SACI,uBAAOA,UAAU,aAAaE,KAAK,SAASnB,MAAM,QAAQyB,QAAS,EAAKlC,kBArB9CmC,EAAKR,c,GA3FpBa,aCIvCC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAW7C,QAG9BQ,SAASC,eAAe,W","file":"static/js/main.e504b76c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport './../../components/listUsers/listUsers.css';\r\nimport './../../components/listUsers/modal.css'\r\n\r\nexport default class ListUsers extends Component {\r\n    // estado do Array dos usuarios e variavel show\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            users: [],\r\n            show: false,\r\n            cards: [\r\n                // valid card\r\n                {\r\n                    card_number: '1111111111111111',\r\n                    cvv: 789,\r\n                    expiry_date: '01/18',\r\n                },\r\n                // invalid card\r\n                {\r\n                    card_number: '4111111111111234',\r\n                    cvv: 123,\r\n                    expiry_date: '01/20',\r\n                },\r\n            ],\r\n            payment:false\r\n        };\r\n        this.showModal = this.showModal.bind(this);\r\n        this.hideModal = this.hideModal.bind(this);\r\n    }\r\n\r\n    showModal = () => {\r\n        this.setState({ show: true });\r\n    };\r\n\r\n    hideModal = () => {\r\n        this.setState({ show: false });\r\n    };\r\n\r\n    //pega as informações do usuario com axios - api\r\n    componentDidMount() {\r\n        Axios.get(\"https://www.mocky.io/v2/5d531c4f2e0000620081ddce\")\r\n            .then(response => {\r\n                const users = response.data;\r\n                this.setState({ users });\r\n                console.log(this.setState({ users }));\r\n            });\r\n        \r\n\r\n    };\r\n    paymentUser = () => {\r\n        const payment = { card_number :document.getElementById('user_card_number'), \r\n        value : document.getElementById('user-value')};\r\n        Axios.post(\"https://run.mocky.io/v3/533cd5d7-63d3-4488-bf8d-4bb8c751c989\", \r\n        payment).then(response => {const payment = response.data;\r\n             this.setState({payment: true})});\r\n             console.log(this.setState({payment}));\r\n        };\r\n\r\n    // rendeniza as informações\r\n   \r\n    render() { \r\n        const { users, cards } = this.state;\r\n        const showHideClassName = this.state.show ? \"modal modal-show\" : \"modal modal-hide\";\r\n        // const paymantFinish = 'Concluido com sucesso';\r\n        // const paymantError = 'Nao com sucesso';\r\n\r\n        // if(this.state.payment.card_number = '1111111111111111'){\r\n        \r\n        // }\r\n        return (<div>\r\n            {/* {if(this.state.payment.card_number = '1111111111111111'){\r\n                \r\n            }} */}\r\n            {/* modal */}\r\n            <div className={showHideClassName}  >\r\n                <div className=\"modal-title\" >\r\n                    Pagamento para \r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    <input className='user-value-pay modal-item' id='user-value'  type='number' placeholder='R$ 0,00' />\r\n                    <select name=\"cards\" className='user-cards modal-item ' >\r\n                        {cards.map(card => (\r\n                            <option value={card.card_number} id='user_card_number'>Cartão com final {card.card_number.slice(-4)}</option>\r\n                        ))}\r\n                    </select>\r\n                    <div className='modal-button'>\r\n                        <input className=\"button-pay modal-item\" type=\"button\" value=\"Pagar\" onClick={this.paymentUser} />\r\n                        <input className=\"button-pay modal-item\" type=\"button\" value=\"Cancela\" onClick={this.hideModal} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* rendeniza os usuarios */}\r\n            {users.map(user => (\r\n                <div className=\"body-background\" key={user.id}>\r\n                    <div className=\"user\">\r\n                        <div className=\"user-itens\">\r\n                            <div className=\"user-photo\">\r\n                                <img src={user.img} alt={user.name} />\r\n                            </div>\r\n                            <div className=\"user-data\">\r\n                                <div>\r\n                                    <label>Usuario: </label>\r\n                                    <span>{user.name}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <label>ID: </label>\r\n                                    <span>{user.id}</span>\r\n                                    <span> - </span>\r\n                                    <label>Username: </label>\r\n                                    <span>{user.username}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"user-button\">\r\n                            <input className=\"button-pay\" type=\"button\" value=\"Pagar\" onClick={this.showModal} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n\r\n        </div>);\r\n    };\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\n\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport ListUsers from './components/listUsers/listUsers'\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/\" component={ListUsers} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n  ,document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}